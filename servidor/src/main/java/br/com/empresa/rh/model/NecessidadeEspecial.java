package br.com.empresa.rh.model;
// Generated 19/04/2016 00:32:26 by Hibernate Tools 4.3.1

import br.com.empresa.rh.model.view.Folha;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonView;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * NecessidadeEspecial generated by hbm2java
 */
@Entity
@SequenceGenerator(name = "necessidade_especial_seq", sequenceName = "necessidade_especial_seq", initialValue = 1, allocationSize = 1)
@Table(name = "necessidade_especial", schema = "public"
)
public class NecessidadeEspecial implements java.io.Serializable {

    @JsonView(Folha.FuncionarioFicha.class)
    private int id;
    @JsonView(Folha.FuncionarioFicha.class)
    private String nome;
    private Set<Pessoa> pessoas = new HashSet<Pessoa>(0);

    public NecessidadeEspecial() {
    }

    public NecessidadeEspecial(int id, String nome) {
        this.id = id;
        this.nome = nome;
    }

    public NecessidadeEspecial(int id, String nome, Set<Pessoa> pessoas) {
        this.id = id;
        this.nome = nome;
        this.pessoas = pessoas;
    }

    @Id
    @GeneratedValue(generator = "necessidade_especial_seq", strategy = GenerationType.SEQUENCE)

    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Column(name = "nome", nullable = false, length = 100)
    public String getNome() {
        return this.nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "pessoa_has_necessidade_especial", schema = "public", joinColumns = {
        @JoinColumn(name = "necessidade_especial_id", nullable = false, updatable = false)}, inverseJoinColumns = {
        @JoinColumn(name = "pessoa_id", nullable = false, updatable = false)})
    public Set<Pessoa> getPessoas() {
        return this.pessoas;
    }

    public void setPessoas(Set<Pessoa> pessoas) {
        this.pessoas = pessoas;
    }

}
