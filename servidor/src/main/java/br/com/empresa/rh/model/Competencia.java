package br.com.empresa.rh.model;
// Generated 17/04/2016 21:10:50 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * Competencia generated by hbm2java
 */
@Entity
@Table(name="competencia"
    ,schema="public"
)
public class Competencia  implements java.io.Serializable {


     private int id;
     private String descricao;
     private char tipo;
     private Set<Vagas> vagases = new HashSet<Vagas>(0);
     private Set<Candidato> candidatos = new HashSet<Candidato>(0);

    public Competencia() {
    }

	
    public Competencia(int id, String descricao, char tipo) {
        this.id = id;
        this.descricao = descricao;
        this.tipo = tipo;
    }
    public Competencia(int id, String descricao, char tipo, Set<Vagas> vagases, Set<Candidato> candidatos) {
       this.id = id;
       this.descricao = descricao;
       this.tipo = tipo;
       this.vagases = vagases;
       this.candidatos = candidatos;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    
    @Column(name="descricao", nullable=false, length=500)
    public String getDescricao() {
        return this.descricao;
    }
    
    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    
    @Column(name="tipo", nullable=false, length=1)
    public char getTipo() {
        return this.tipo;
    }
    
    public void setTipo(char tipo) {
        this.tipo = tipo;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="vagas_has_competencia", schema="public", joinColumns = { 
        @JoinColumn(name="competencia_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="vagas_id", nullable=false, updatable=false) })
    public Set<Vagas> getVagases() {
        return this.vagases;
    }
    
    public void setVagases(Set<Vagas> vagases) {
        this.vagases = vagases;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="competencia_has_candidato", schema="public", joinColumns = { 
        @JoinColumn(name="competencia_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="candidato_id", nullable=false, updatable=false) })
    public Set<Candidato> getCandidatos() {
        return this.candidatos;
    }
    
    public void setCandidatos(Set<Candidato> candidatos) {
        this.candidatos = candidatos;
    }




}


