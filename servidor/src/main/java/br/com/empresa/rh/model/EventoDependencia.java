package br.com.empresa.rh.model;
// Generated 19/04/2016 00:32:26 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.Type;

/**
 * EventoFuncionario generated by hbm2java
 */
@Entity
@Table(name="evento_dependencia"
    ,schema="public" 
)
public class EventoDependencia  implements java.io.Serializable {


     private EventoDependenciaId id;
     private Evento eventoByEventoDependenciaId;
     @JsonIgnore
     private Evento eventoByEventoId;
     private String nomeVariavel;
    
    public EventoDependencia() {
    }

	
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="eventoDependenciaId", column=@Column(name="evento_dependencia_id", unique=true, nullable=false) ), 
        @AttributeOverride(name="eventoId", column=@Column(name="evento_id", unique=true, nullable=false) ) } )
    public EventoDependenciaId getId() {
        return this.id;
    }
    
    public void setId(EventoDependenciaId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="evento_dependencia_id", unique=true, nullable=false, insertable=false, updatable=false)
    public Evento getEventoByEventoDependenciaId() {
        return this.eventoByEventoDependenciaId;
    }
    
    public void setEventoByEventoDependenciaId(Evento eventoByEventoDependenciaId) {
        this.eventoByEventoDependenciaId = eventoByEventoDependenciaId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="evento_id", unique=true, nullable=false, insertable=false, updatable=false)
    public Evento getEventoByEventoId() {
        return this.eventoByEventoId;
    }
    
    public void setEventoByEventoId(Evento eventoByEventoId) {
        this.eventoByEventoId = eventoByEventoId;
    }

    
    @Column(name="nome_variavel", length=100)
    public String getNomeVariavel() {
        return this.nomeVariavel;
    }
    
    public void setNomeVariavel(String nomeVariavel) {
        this.nomeVariavel = nomeVariavel;
    }


}